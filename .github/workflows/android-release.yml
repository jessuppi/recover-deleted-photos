name: Build Android Release

on:
  workflow_dispatch: {}

permissions:
  contents: read

jobs:
  build:
    name: Build AAB
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Write Gradle signing properties
        run: |
          set -euo pipefail
          mkdir -p "$HOME/.gradle" "$HOME/keystore"
          {
            echo "RELEASE_STORE_FILE=$HOME/keystore/upload-key.jks"
            echo "RELEASE_STORE_PASSWORD=${{ secrets.RELEASE_STORE_PASSWORD }}"
            echo "RELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}"
            echo "RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}"
          } > "$HOME/.gradle/gradle.properties"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Clean any leftover/broken wrapper
        run: rm -f gradle/wrapper/gradle-wrapper.jar

      - name: Download Gradle 8.9
        run: |
          set -euo pipefail
          curl -sL https://services.gradle.org/distributions/gradle-8.9-bin.zip -o gradle.zip
          unzip -q gradle.zip
          echo "$PWD/gradle-8.9/bin" >> "$GITHUB_PATH"

      - name: Generate Gradle Wrapper (8.9)
        run: gradle wrapper --gradle-version 8.9

      - name: Make Gradle executable
        run: chmod +x gradlew

      - name: Restore keystore from secret
        run: |
          set -euo pipefail
          echo "${{ secrets.RELEASE_KEYSTORE }}" | base64 --decode > "$HOME/keystore/upload-key.jks"

      - name: Diagnose Kotlin compile (verbose)
        run: |
          ./gradlew --no-daemon --stacktrace --debug --info --warning-mode all \
            --rerun-tasks :app:compileReleaseKotlin

      - name: Build signed Release bundle
        run: ./gradlew --no-daemon --stacktrace --info clean bundleRelease

      - name: Verify AAB signature
        run: jarsigner -verify app/build/outputs/bundle/release/app-release.aab

      - name: Upload build logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-and-kotlin-logs
          path: |
            **/build/reports/**
            **/build/tmp/kotlin-compile*/**
            ~/.gradle/daemon/*/daemon-*.out.log
            ~/.gradle/caches/**/kotlin/**
            ./**/build/outputs/logs/**
            ./**/build/*/reports/**

      - name: Upload AAB artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/bundle/release/app-release.aab
          
